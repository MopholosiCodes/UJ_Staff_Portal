<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>